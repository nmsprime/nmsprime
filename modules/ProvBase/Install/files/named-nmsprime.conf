//
// named.conf
//
// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS
// server as a caching only nameserver (as a localhost DNS resolver only).
//
// See /usr/share/doc/bind*/sample/ for example named configuration files.
//
// See the BIND Administrator's Reference Manual (ARM) for details about the
// configuration located in /usr/share/doc/bind-{version}/Bv9ARM.html

acl local {
	127.0.0.1;
};

acl cm {
	10.0.0.0/9;
};

acl cpe {
	100.64.0.0/11;
};

acl mta {
	100.96.0.0/11;
};

//
// NOTE:
//  local: allow update and recursion
//  cm, mta: deny recursion and update
//  cpe: allow recursion, deny update
//
//  debug: allow all
//

options {
	// define the the interfaces the bind server shall listen here by the ip's that are assigned to them - write "any" to listen to all if's
	listen-on port 53	{ local; };
	listen-on-v6 port 53	{ ::1; };
	directory		"/var/named";
	dump-file		"/var/named/data/cache_dump.db";
	statistics-file		"/var/named/data/named_stats.txt";
	memstatistics-file	"/var/named/data/named_mem_stats.txt";
	allow-query		{ local; cm; cpe; mta; }; // we need query to resolve modem, mta name !

	forwarders		{ 8.8.8.8; 8.8.4.4; };

	/*
	 - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
	 - If you are building a RECURSIVE (caching) DNS server, you need to enable
	   recursion.
	 - If your recursive DNS server has a public IP address, you MUST enable access
	   control to limit queries to your legitimate users. Failing to do so will
	   cause your server to become part of large scale DNS amplification
	   attacks. Implementing BCP38 within your network would greatly
	   reduce such attack surface
	*/

	recursion yes;
	allow-recursion		{ local; cm; cpe; mta; }; // we need local to resolve modem, mta names !

	empty-zones-enable no;

	dnssec-enable yes;
	dnssec-validation yes;
	dnssec-lookaside auto;

	/* Path to ISC DLV key */
	bindkeys-file "/etc/named.iscdlv.key";

	managed-keys-directory "/var/named/dynamic";

	pid-file "/run/named/named.pid";
	session-keyfile "/run/named/session.key";
};



key dhcpupdate {
	algorithm hmac-md5;
	secret "<DNS-PASSWORD>";
};

# TODO: Specify a different zone for each subnet!?!
# forward zone
zone "nmsprime.test" IN {
	type master;
	file "/var/named/dynamic/nmsprime.test.zone";
	allow-update { key dhcpupdate; };
	allow-transfer { local; };
	notify yes;
};
# reverse zone
zone "in-addr.arpa" IN {
	type master;
	file "/var/named/dynamic/in-addr.arpa.zone";
	allow-update { key dhcpupdate; };
	allow-transfer { local; };
	notify yes;
};

logging {
	channel default_debug {
		file "data/named.run" versions 3 size 5m;
		severity dynamic;
		print-time     yes;
	};
	channel update_debug {
		file "data/update-debug.log" versions 3 size 5m;
		severity  debug 3;
		print-category yes;
		print-severity yes;
		print-time     yes;
	};
	channel security_info    {
		file "data/named-auth.info" versions 3 size 5m;
		severity  debug 3;
		print-category yes;
		print-severity yes;
		print-time     yes;
	};
	channel notify_file {
		file "data/notify.log" versions 3 size 5m;
		severity dynamic;
		print-time yes;
	};
	channel unmatched_file {
		file "data/unmatched.log" versions 3 size 5m;
		severity dynamic;
		print-time yes;
	};
	channel queries_file {
		file "data/queries.log" versions 3 size 5m;
		severity dynamic;
		print-time yes;
	};

	category update { update_debug; };
	category security { security_info; };
	category notify { notify_file; };
	category unmatched { unmatched_file; };
	category queries { queries_file; };
};


include "/etc/named.rfc1912.zones";
include "/etc/named.root.key";
